<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://eduardstan.github.io/https://eduardstan.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://eduardstan.github.io/https://eduardstan.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-02-23T16:57:15+00:00</updated><id>https://eduardstan.github.io/https://eduardstan.github.io/feed.xml</id><title type="html">blank</title><subtitle>Eduard&apos;s Kitchen</subtitle><entry><title type="html">Mastering LaTeX</title><link href="https://eduardstan.github.io/https://eduardstan.github.io/blog/2025/latex-mistakes-and-solutions/" rel="alternate" type="text/html" title="Mastering LaTeX"/><published>2025-01-13T00:00:00+00:00</published><updated>2025-01-13T00:00:00+00:00</updated><id>https://eduardstan.github.io/https://eduardstan.github.io/blog/2025/latex-mistakes-and-solutions</id><content type="html" xml:base="https://eduardstan.github.io/https://eduardstan.github.io/blog/2025/latex-mistakes-and-solutions/"><![CDATA[<p>LaTeX is a powerful typesetting system that has become the standard for producing scientific and mathematical documents of high typographical quality. Its strengths lie in its ability to handle complex structures and its extensive customization capabilities. However, its complexity can also lead to common mistakes that can be challenging to troubleshoot, even for experienced users. To this end, I present this comprehensive guide to help you navigate these pitfalls. Each point is detailed with thorough explanations, examples, solutions, and alternative approaches, ensuring the information is invaluable for your LaTeX mastery.</p> <hr/> <h2 id="introduction">Introduction</h2> <p>LaTeX’s extensive capabilities allow for the creation of complex documents with precise control over formatting and structure. However, its steep learning curve can lead to common mistakes that hinder productivity and document quality. This guide aims to equip you with the knowledge to avoid these pitfalls, optimize your LaTeX workflow, and harness advanced techniques, which are valuable for researchers preparing scholarly papers.</p> <hr/> <h2 id="simple-mistakes">Simple Mistakes</h2> <h3 id="1-misplaced-or-missing-braces-">1. Misplaced or Missing Braces <code class="language-plaintext highlighter-rouge">{}</code></h3> <h4 id="the-issue"><strong>The Issue</strong></h4> <p>LaTeX uses braces <code class="language-plaintext highlighter-rouge">{}</code> to group content and define the scope of commands. Missing or misplacing braces can lead to compilation errors or unintended formatting.</p> <h4 id="symptoms"><strong>Symptoms</strong></h4> <ul> <li><strong>Compilation Errors</strong>: Errors pointing to unexpected parts of the code.</li> <li><strong>Formatting Issues</strong>: Text appearing in the wrong format or location.</li> <li><strong>Error Messages</strong>: Such as <code class="language-plaintext highlighter-rouge">Runaway argument?</code> or <code class="language-plaintext highlighter-rouge">Extra }, or forgotten \endgroup</code>.</li> </ul> <h4 id="example-of-the-mistake"><strong>Example of the Mistake</strong></h4> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">\textbf</span><span class="p">{</span>This is bold text.
</code></pre></div></div> <h4 id="explanation"><strong>Explanation</strong></h4> <p>The <code class="language-plaintext highlighter-rouge">\textbf{}</code> command applies bold formatting to the text within the braces. LaTeX cannot determine where the command ends without a closing brace, resulting in an error.</p> <h4 id="solution"><strong>Solution</strong></h4> <p>Ensure every opening brace <code class="language-plaintext highlighter-rouge">{</code> has a corresponding closing brace <code class="language-plaintext highlighter-rouge">}</code>.</p> <h4 id="corrected-code"><strong>Corrected Code</strong></h4> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">\textbf</span><span class="p">{</span>This is bold text.<span class="p">}</span>
</code></pre></div></div> <h4 id="alternative-solutions"><strong>Alternative Solutions</strong></h4> <ul> <li><strong>Use an Editor with Brace Matching</strong>: Editors like <strong>TeXstudio</strong>, <strong>Overleaf</strong>, or <strong>Visual Studio Code</strong> highlight matching braces, helping you spot mismatches easily.</li> <li><strong>Structure Your Code</strong>: Break down complex commands into smaller parts to make brace matching more manageable.</li> </ul> <h4 id="out-of-the-box-tip"><strong>Out-of-the-Box Tip</strong></h4> <p>Consider using a linter or code analysis tool that checks for unbalanced braces and other syntax errors as you type. This proactive approach can prevent errors before they occur.</p> <hr/> <h3 id="2-undefined-control-sequences">2. Undefined Control Sequences</h3> <h4 id="the-issue-1"><strong>The Issue</strong></h4> <p>Using commands that LaTeX does not recognize, often due to typos or missing packages, leads to <code class="language-plaintext highlighter-rouge">Undefined control sequence</code> errors.</p> <h4 id="symptoms-1"><strong>Symptoms</strong></h4> <ul> <li><strong>Error Messages</strong>: <code class="language-plaintext highlighter-rouge">Undefined control sequence</code>.</li> <li><strong>Compilation Failure</strong>: Document fails to compile, or certain elements do not appear as expected.</li> </ul> <h4 id="example-of-the-mistake-1"><strong>Example of the Mistake</strong></h4> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">\begin{document}</span>
<span class="k">\includegraphics</span><span class="p">{</span>image.png<span class="p">}</span>
<span class="nt">\end{document}</span>
</code></pre></div></div> <h4 id="explanation-1"><strong>Explanation</strong></h4> <p>The <code class="language-plaintext highlighter-rouge">\includegraphics{}</code> command is provided by the <code class="language-plaintext highlighter-rouge">graphicx</code> package. Without including this package in the preamble, LaTeX does not recognize the command.</p> <h4 id="solution-1"><strong>Solution</strong></h4> <p>Include the necessary package in the preamble.</p> <h4 id="corrected-code-1"><strong>Corrected Code</strong></h4> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">\documentclass</span><span class="p">{</span>article<span class="p">}</span>
<span class="k">\usepackage</span><span class="p">{</span>graphicx<span class="p">}</span>

<span class="nt">\begin{document}</span>
<span class="k">\includegraphics</span><span class="p">{</span>image.png<span class="p">}</span>
<span class="nt">\end{document}</span>
</code></pre></div></div> <h4 id="alternative-solutions-1"><strong>Alternative Solutions</strong></h4> <ul> <li><strong>Check for Typos</strong>: Ensure all commands are spelled correctly and use the correct syntax.</li> <li><strong>Create a Personal Template</strong>: Include commonly used packages in a template to avoid forgetting them.</li> </ul> <h4 id="out-of-the-box-tip-1"><strong>Out-of-the-Box Tip</strong></h4> <p>Use the <code class="language-plaintext highlighter-rouge">\RequirePackage{}</code> directive in custom class or package files to ensure necessary packages are always loaded, especially when collaborating with others.</p> <hr/> <h3 id="3-ignoring-special-characters">3. Ignoring Special Characters</h3> <h4 id="the-issue-2"><strong>The Issue</strong></h4> <p>Certain characters have special meanings in LaTeX and cannot be used directly in text. These include <code class="language-plaintext highlighter-rouge">#</code>, <code class="language-plaintext highlighter-rouge">%</code>, <code class="language-plaintext highlighter-rouge">$</code>, <code class="language-plaintext highlighter-rouge">&amp;</code>, <code class="language-plaintext highlighter-rouge">_</code>, <code class="language-plaintext highlighter-rouge">{</code>, <code class="language-plaintext highlighter-rouge">}</code>, <code class="language-plaintext highlighter-rouge">^</code>, <code class="language-plaintext highlighter-rouge">~</code>, and <code class="language-plaintext highlighter-rouge">\</code>.</p> <h4 id="symptoms-2"><strong>Symptoms</strong></h4> <ul> <li><strong>Compilation Errors</strong>: When these characters are used without proper handling.</li> <li><strong>Error Messages</strong>: <code class="language-plaintext highlighter-rouge">Missing $ inserted</code> or <code class="language-plaintext highlighter-rouge">Undefined control sequence</code>.</li> </ul> <h4 id="example-of-the-mistake-2"><strong>Example of the Mistake</strong></h4> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code>The cost is <span class="p">$</span><span class="m">100</span><span class="nb"> </span><span class="p">&amp;</span><span class="nb"> tax included.
</span></code></pre></div></div> <h4 id="explanation-2"><strong>Explanation</strong></h4> <p>The <code class="language-plaintext highlighter-rouge">&amp;</code> character is used for alignment in tables and arrays. Using it outside of these environments without escaping causes an error.</p> <h4 id="solution-2"><strong>Solution</strong></h4> <p>Escape special characters by prefixing them with a backslash <code class="language-plaintext highlighter-rouge">\</code>.</p> <h4 id="corrected-code-2"><strong>Corrected Code</strong></h4> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code>The cost is <span class="k">\$</span>100 <span class="k">\&amp;</span> tax included.
</code></pre></div></div> <h4 id="alternative-solutions-2"><strong>Alternative Solutions</strong></h4> <ul> <li> <p><strong>Use the <code class="language-plaintext highlighter-rouge">verbatim</code> Environment</strong>: For code snippets or text where special characters should be displayed as-is.</p> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">\begin{verbatim}</span>
The cost is <span class="p">$</span><span class="m">100</span><span class="nb"> </span><span class="p">&amp;</span><span class="nb"> tax included.
</span><span class="nv">\end</span><span class="p">{</span><span class="nb">verbatim</span><span class="p">}</span><span class="nb">
</span></code></pre></div> </div> </li> <li> <p><strong>Use the <code class="language-plaintext highlighter-rouge">\texttt{}</code> Command</strong>: For inline monospace text.</p> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Use the command <span class="k">\texttt</span><span class="p">{</span>git status<span class="p">}</span> to check the repository status.
</code></pre></div> </div> </li> </ul> <h4 id="out-of-the-box-tip-2"><strong>Out-of-the-Box Tip</strong></h4> <p>Use the <code class="language-plaintext highlighter-rouge">listings</code> or <code class="language-plaintext highlighter-rouge">minted</code> package to handle special characters automatically and provide syntax highlighting for code listings.</p> <hr/> <h3 id="4-overfull-and-underfull-boxes">4. Overfull and Underfull Boxes</h3> <h4 id="the-issue-3"><strong>The Issue</strong></h4> <p>Overfull or underfull boxes occur when LaTeX cannot properly fit text within the specified margins, leading to too wide or too narrow lines.</p> <h4 id="symptoms-3"><strong>Symptoms</strong></h4> <ul> <li><strong>Warning Messages</strong>: <code class="language-plaintext highlighter-rouge">Overfull \hbox</code> or <code class="language-plaintext highlighter-rouge">Underfull \hbox</code>.</li> <li><strong>Visual Issues</strong>: Text protruding into the margins or uneven spacing between words.</li> </ul> <h4 id="example-of-the-mistake-3"><strong>Example of the Mistake</strong></h4> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code>This long line of text will likely cause an overfull hbox warning because it cannot be broken properly.
</code></pre></div></div> <h4 id="explanation-3"><strong>Explanation</strong></h4> <p>LaTeX tries to adjust the spacing to justify text, but it reports overfull or underfull boxes when it cannot. Long words or URLs without breakpoints exacerbate the issue.</p> <h4 id="solution-3"><strong>Solution</strong></h4> <ul> <li><strong>Allow Hyphenation</strong>: Ensure words can be hyphenated or manually insert hyphenation points using <code class="language-plaintext highlighter-rouge">\-</code>.</li> <li> <p><strong>Use the <code class="language-plaintext highlighter-rouge">microtype</code> Package</strong>: Enhances justification and hyphenation.</p> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">\usepackage</span><span class="p">{</span>microtype<span class="p">}</span>
</code></pre></div> </div> </li> </ul> <h4 id="corrected-code-3"><strong>Corrected Code</strong></h4> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">\usepackage</span><span class="p">{</span>microtype<span class="p">}</span>

This long line of text will likely cause an over<span class="k">\-</span>full hbox warning because it cannot be broken properly.
</code></pre></div></div> <h4 id="alternative-solutions-3"><strong>Alternative Solutions</strong></h4> <ul> <li><strong>Adjust Tolerance Settings</strong>: Use <code class="language-plaintext highlighter-rouge">\sloppy</code> or set <code class="language-plaintext highlighter-rouge">\tolerance=1000</code> to allow more flexible spacing.</li> <li><strong>Handle Long URLs</strong>: Use the <code class="language-plaintext highlighter-rouge">url</code> or <code class="language-plaintext highlighter-rouge">breakurl</code> package to manage line breaks in URLs.</li> </ul> <h4 id="out-of-the-box-tip-3"><strong>Out-of-the-Box Tip</strong></h4> <p>Set <code class="language-plaintext highlighter-rouge">\emergencystretch=3em</code> to allow LaTeX to adjust spacing in emergency situations without affecting overall formatting.</p> <hr/> <h3 id="5-incorrect-figure-and-table-placement">5. Incorrect Figure and Table Placement</h3> <h4 id="the-issue-4"><strong>The Issue</strong></h4> <p>Figures and tables (floats) only sometimes appear where you expect them due to LaTeX’s float placement algorithm and incorrect placement specifiers.</p> <h4 id="symptoms-4"><strong>Symptoms</strong></h4> <ul> <li><strong>Misplaced Floats</strong>: Figures and tables appear at the top or bottom of pages instead of where they are placed in the code.</li> <li><strong>Accumulation of Floats</strong>: Multiple floats stack up at the end of a chapter or section.</li> <li><strong>Gaps in Text</strong>: Large gaps in the document where floats are supposed to appear.</li> </ul> <h4 id="example-of-the-mistake-4"><strong>Example of the Mistake</strong></h4> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">\begin{figure}</span>
  <span class="k">\includegraphics</span><span class="p">{</span>image.png<span class="p">}</span>
  <span class="k">\caption</span><span class="p">{</span>An example image<span class="p">}</span>
  <span class="k">\label</span><span class="p">{</span>fig:example<span class="p">}</span>
<span class="nt">\end{figure}</span>
</code></pre></div></div> <p>No placement specifier is provided, so LaTeX defaults to <code class="language-plaintext highlighter-rouge">[tbp]</code>.</p> <h4 id="explanation-4"><strong>Explanation</strong></h4> <p>LaTeX places floats according to allowed positions:</p> <ul> <li><code class="language-plaintext highlighter-rouge">h</code> (here): Place the float where it appears in the source code.</li> <li><code class="language-plaintext highlighter-rouge">t</code> (top): At the top of a page.</li> <li><code class="language-plaintext highlighter-rouge">b</code> (bottom): At the bottom of a page.</li> <li><code class="language-plaintext highlighter-rouge">p</code> (page of floats): On a dedicated float page.</li> </ul> <p>LaTeX uses its algorithm without explicit instructions, which may not align with your expectations.</p> <h4 id="solution-4"><strong>Solution</strong></h4> <p>Specify float placement options to guide LaTeX.</p> <h4 id="corrected-code-4"><strong>Corrected Code</strong></h4> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">\begin{figure}</span>[htbp]
  <span class="k">\centering</span>
  <span class="k">\includegraphics</span><span class="p">{</span>image.png<span class="p">}</span>
  <span class="k">\caption</span><span class="p">{</span>An example image<span class="p">}</span>
  <span class="k">\label</span><span class="p">{</span>fig:example<span class="p">}</span>
<span class="nt">\end{figure}</span>
</code></pre></div></div> <h4 id="detailed-explanation-of-htbp-vs-htb"><strong>Detailed Explanation of <code class="language-plaintext highlighter-rouge">[htbp]</code> vs. <code class="language-plaintext highlighter-rouge">[htb]</code></strong></h4> <ul> <li><strong><code class="language-plaintext highlighter-rouge">[htbp]</code></strong>: Allows placement <strong>here</strong>, at the <strong>top</strong> or <strong>bottom</strong> of a page, or on a separate <strong>float page</strong> (<code class="language-plaintext highlighter-rouge">p</code>). Including <code class="language-plaintext highlighter-rouge">p</code> gives LaTeX more flexibility when placing the float.</li> <li><strong><code class="language-plaintext highlighter-rouge">[htb]</code></strong>: Allows placement <strong>here</strong>, at the <strong>top</strong> or <strong>bottom</strong> of a page, but <strong>not</strong> on a separate float page. Omitting <code class="language-plaintext highlighter-rouge">p</code> can cause floats to pile up if they do not fit the specified positions.</li> </ul> <h4 id="alternative-solutions-4"><strong>Alternative Solutions</strong></h4> <ul> <li><strong>Use the <code class="language-plaintext highlighter-rouge">!</code> Modifier</strong>: <code class="language-plaintext highlighter-rouge">[!htbp]</code> tells LaTeX to ignore certain restrictions and try harder to place the float as specified.</li> <li> <p><strong>Force Exact Placement with the <code class="language-plaintext highlighter-rouge">float</code> Package</strong>:</p> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">\usepackage</span><span class="p">{</span>float<span class="p">}</span>

<span class="nt">\begin{figure}</span>[H]
  <span class="k">\centering</span>
  <span class="k">\includegraphics</span><span class="p">{</span>image.png<span class="p">}</span>
  <span class="k">\caption</span><span class="p">{</span>An example image<span class="p">}</span>
  <span class="k">\label</span><span class="p">{</span>fig:example<span class="p">}</span>
<span class="nt">\end{figure}</span>
</code></pre></div> </div> <ul> <li>The <code class="language-plaintext highlighter-rouge">[H]</code> specifier forces the float to appear precisely where it is in the code, which can disrupt the document’s flow.</li> </ul> </li> </ul> <h4 id="out-of-the-box-tip-4"><strong>Out-of-the-Box Tip</strong></h4> <p>Use the <code class="language-plaintext highlighter-rouge">placeins</code> package and the <code class="language-plaintext highlighter-rouge">\FloatBarrier</code> command to prevent floats from moving past a certain point, such as the end of a section.</p> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">\usepackage</span><span class="p">{</span>placeins<span class="p">}</span>

...

<span class="k">\section</span><span class="p">{</span>Results<span class="p">}</span>
<span class="c">% Figures and tables</span>
<span class="k">\FloatBarrier</span>
</code></pre></div></div> <hr/> <h3 id="6-incorrect-use-of-math-mode">6. Incorrect Use of Math Mode</h3> <h4 id="the-issue-5"><strong>The Issue</strong></h4> <p>Failing to correctly enter or exit math mode results in incorrect formatting and errors.</p> <h4 id="symptoms-5"><strong>Symptoms</strong></h4> <ul> <li><strong>Improper Formatting</strong>: Mathematical symbols appearing as regular text.</li> <li><strong>Compilation Errors</strong>: Error messages like <code class="language-plaintext highlighter-rouge">Missing $ inserted</code>.</li> </ul> <h4 id="example-of-the-mistake-5"><strong>Example of the Mistake</strong></h4> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code>The solution to ax + b = 0 is x = -b/a.
</code></pre></div></div> <h4 id="explanation-5"><strong>Explanation</strong></h4> <p>Mathematical expressions need to be enclosed in <code class="language-plaintext highlighter-rouge">$...$</code> or <code class="language-plaintext highlighter-rouge">\[...\]</code> to be typeset correctly.</p> <h4 id="solution-5"><strong>Solution</strong></h4> <p>Ensure all mathematical content is within math mode delimiters.</p> <h4 id="corrected-code-5"><strong>Corrected Code</strong></h4> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code>The solution to <span class="p">$</span><span class="nb">ax </span><span class="o">+</span><span class="nb"> b </span><span class="o">=</span><span class="nb"> </span><span class="m">0</span><span class="p">$</span> is <span class="p">$</span><span class="nb">x </span><span class="o">=</span><span class="nb"> </span><span class="o">-</span><span class="nb">b</span><span class="o">/</span><span class="nb">a</span><span class="p">$</span>.
</code></pre></div></div> <h4 id="alternative-solutions-5"><strong>Alternative Solutions</strong></h4> <ul> <li> <p>Use <code class="language-plaintext highlighter-rouge">\( ... \)</code> and <code class="language-plaintext highlighter-rouge">\[ ... \]</code> for inline and display math mode, respectively.</p> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code>The solution to <span class="p">\(</span><span class="nb"> ax </span><span class="o">+</span><span class="nb"> b </span><span class="o">=</span><span class="nb"> </span><span class="m">0</span><span class="nb"> </span><span class="p">\)</span> is <span class="p">\(</span><span class="nb"> x </span><span class="o">=</span><span class="nb"> </span><span class="o">-</span><span class="nv">\frac</span><span class="p">{</span><span class="nb">b</span><span class="p">}{</span><span class="nb">a</span><span class="p">}</span><span class="nb"> </span><span class="p">\)</span>.
</code></pre></div> </div> </li> </ul> <h4 id="out-of-the-box-tip-5"><strong>Out-of-the-Box Tip</strong></h4> <p>Use the <code class="language-plaintext highlighter-rouge">amsmath</code> package for enhanced mathematical typesetting capabilities, providing environments like <code class="language-plaintext highlighter-rouge">align</code>, <code class="language-plaintext highlighter-rouge">gather</code>, and <code class="language-plaintext highlighter-rouge">multline</code>.</p> <hr/> <h3 id="7-improper-use-of-label-and-ref-commands">7. Improper Use of <code class="language-plaintext highlighter-rouge">\label</code> and <code class="language-plaintext highlighter-rouge">\ref</code> Commands</h3> <h4 id="the-issue-6"><strong>The Issue</strong></h4> <p>Incorrectly placing <code class="language-plaintext highlighter-rouge">\label</code> commands or not using <code class="language-plaintext highlighter-rouge">\ref</code> and <code class="language-plaintext highlighter-rouge">\pageref</code> properly leads to broken or incorrect cross-references.</p> <h4 id="symptoms-6"><strong>Symptoms</strong></h4> <ul> <li><strong>Broken References</strong>: References showing up as “??”.</li> <li><strong>Incorrect Numbering</strong>: References pointing to wrong sections or figures.</li> </ul> <h4 id="example-of-the-mistake-6"><strong>Example of the Mistake</strong></h4> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">\section</span><span class="p">{</span>Introduction<span class="p">}</span>
<span class="k">\label</span><span class="p">{</span>sec:intro<span class="p">}</span>

As discussed in Section <span class="k">\ref</span><span class="p">{</span>sec:intro<span class="p">}</span>, ...
</code></pre></div></div> <p>If <code class="language-plaintext highlighter-rouge">\label</code> is not immediately after the <code class="language-plaintext highlighter-rouge">\section</code> command, it may not correctly capture the section number.</p> <h4 id="explanation-6"><strong>Explanation</strong></h4> <p>To correctly reference the number, the <code class="language-plaintext highlighter-rouge">\label</code> command should come immediately after the counter-stepping command (like <code class="language-plaintext highlighter-rouge">\section</code>, <code class="language-plaintext highlighter-rouge">\caption</code>, etc.).</p> <h4 id="solution-6"><strong>Solution</strong></h4> <p>Place <code class="language-plaintext highlighter-rouge">\label</code> immediately after the sectioning or captioning command.</p> <h4 id="corrected-code-6"><strong>Corrected Code</strong></h4> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">\section</span><span class="p">{</span>Introduction<span class="p">}</span><span class="k">\label</span><span class="p">{</span>sec:intro<span class="p">}</span>

As discussed in Section <span class="k">\ref</span><span class="p">{</span>sec:intro<span class="p">}</span>, ...
</code></pre></div></div> <h4 id="alternative-solutions-6"><strong>Alternative Solutions</strong></h4> <ul> <li> <p><strong>Use Meaningful Labels</strong>: To organize labels, use prefixes like <code class="language-plaintext highlighter-rouge">sec:</code>, <code class="language-plaintext highlighter-rouge">fig:</code>, and <code class="language-plaintext highlighter-rouge">tab:</code>.</p> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">\section</span><span class="p">{</span>Methodology<span class="p">}</span><span class="k">\label</span><span class="p">{</span>sec:method<span class="p">}</span>

See Figure~<span class="k">\ref</span><span class="p">{</span>fig:example<span class="p">}</span> for an illustration.
</code></pre></div> </div> </li> </ul> <h4 id="out-of-the-box-tip-6"><strong>Out-of-the-Box Tip</strong></h4> <p>Consider using the <code class="language-plaintext highlighter-rouge">cleveref</code> package to automate reference formatting and reduce errors for complex documents.</p> <hr/> <h3 id="8-not-loading-necessary-packages">8. Not Loading Necessary Packages</h3> <h4 id="the-issue-7"><strong>The Issue</strong></h4> <p>Neglecting to include packages that provide essential commands or functionalities results in errors or missing features.</p> <h4 id="symptoms-7"><strong>Symptoms</strong></h4> <ul> <li><strong>Undefined Commands</strong>: Errors like <code class="language-plaintext highlighter-rouge">Undefined control sequence</code>.</li> <li><strong>Missing Symbols</strong>: Improper display of mathematical symbols or special characters.</li> </ul> <h4 id="example-of-the-mistake-7"><strong>Example of the Mistake</strong></h4> <p>Using <code class="language-plaintext highlighter-rouge">\mathbb{R}</code> without including the <code class="language-plaintext highlighter-rouge">amssymb</code> package.</p> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Let <span class="p">$</span><span class="nb">x </span><span class="nv">\in</span><span class="nb"> </span><span class="nv">\mathbb</span><span class="p">{</span><span class="nb">R</span><span class="p">}$</span>.
</code></pre></div></div> <h4 id="explanation-7"><strong>Explanation</strong></h4> <p>The <code class="language-plaintext highlighter-rouge">\mathbb{}</code> command is provided by the <code class="language-plaintext highlighter-rouge">amssymb</code> package.</p> <h4 id="solution-7"><strong>Solution</strong></h4> <p>Include the necessary package in the preamble.</p> <h4 id="corrected-code-7"><strong>Corrected Code</strong></h4> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">\usepackage</span><span class="p">{</span>amssymb<span class="p">}</span>

Let <span class="p">$</span><span class="nb">x </span><span class="nv">\in</span><span class="nb"> </span><span class="nv">\mathbb</span><span class="p">{</span><span class="nb">R</span><span class="p">}$</span>.
</code></pre></div></div> <h4 id="alternative-solutions-7"><strong>Alternative Solutions</strong></h4> <ul> <li><strong>Consult Documentation</strong>: Refer to package documentation to identify required packages for specific commands.</li> <li><strong>Use the Comprehensive LaTeX Symbol List</strong>: Available online to find symbols and their corresponding packages.</li> </ul> <h4 id="out-of-the-box-tip-7"><strong>Out-of-the-Box Tip</strong></h4> <p>Create a personal package or class file that includes frequently used packages for consistency across documents.</p> <hr/> <h3 id="9-improper-font-encoding">9. Improper Font Encoding</h3> <h4 id="the-issue-8"><strong>The Issue</strong></h4> <p>Using characters that are not supported by the default font encoding leads to errors or missing characters.</p> <h4 id="symptoms-8"><strong>Symptoms</strong></h4> <ul> <li><strong>Error Messages</strong>: <code class="language-plaintext highlighter-rouge">Command \textquotedbl unavailable in encoding OT1</code>.</li> <li><strong>Missing Characters</strong>: Accented characters or special symbols not displaying correctly.</li> </ul> <h4 id="example-of-the-mistake-8"><strong>Example of the Mistake</strong></h4> <p>Using accented characters without specifying the proper font encoding.</p> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code>El Niño phenomenon affects climate patterns.
</code></pre></div></div> <h4 id="explanation-8"><strong>Explanation</strong></h4> <p>By default, LaTeX uses the OT1 font encoding, which does not support accented characters directly.</p> <h4 id="solution-8"><strong>Solution</strong></h4> <p>Include the <code class="language-plaintext highlighter-rouge">fontenc</code> and <code class="language-plaintext highlighter-rouge">inputenc</code> packages.</p> <h4 id="corrected-code-8"><strong>Corrected Code</strong></h4> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">\usepackage</span><span class="na">[T1]</span><span class="p">{</span>fontenc<span class="p">}</span>
<span class="k">\usepackage</span><span class="na">[utf8]</span><span class="p">{</span>inputenc<span class="p">}</span>

El Niño phenomenon affects climate patterns.
</code></pre></div></div> <h4 id="alternative-solutions-8"><strong>Alternative Solutions</strong></h4> <ul> <li><strong>Use Unicode-aware Compilers</strong>: Switch to XeLaTeX or LuaLaTeX, which handle Unicode natively.</li> </ul> <h4 id="out-of-the-box-tip-8"><strong>Out-of-the-Box Tip</strong></h4> <p>Set the document to use modern fonts and encoding from the start to avoid encoding issues.</p> <hr/> <h3 id="10-forgetting-to-save-files-with-the-correct-encoding">10. Forgetting to Save Files with the Correct Encoding</h3> <h4 id="the-issue-9"><strong>The Issue</strong></h4> <p>Saving files in the wrong encoding causes LaTeX to misinterpret special characters.</p> <h4 id="symptoms-9"><strong>Symptoms</strong></h4> <ul> <li><strong>Compilation Errors</strong>: Involving unexpected characters.</li> <li><strong>Misrendered Characters</strong>: Special characters not displaying correctly.</li> </ul> <h4 id="example-of-the-mistake-9"><strong>Example of the Mistake</strong></h4> <p>Writing the document with UTF-8 characters but saving it in ANSI encoding.</p> <h4 id="explanation-9"><strong>Explanation</strong></h4> <p>LaTeX reads the file according to the specified encoding. Mismatches between file encoding and declared encoding lead to errors.</p> <h4 id="solution-9"><strong>Solution</strong></h4> <ul> <li>Ensure your text editor saves files in UTF-8 encoding.</li> <li>Match the encoding in <code class="language-plaintext highlighter-rouge">\usepackage[...]{inputenc}</code> with the file encoding.</li> </ul> <h4 id="corrected-code-9"><strong>Corrected Code</strong></h4> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">\usepackage</span><span class="na">[utf8]</span><span class="p">{</span>inputenc<span class="p">}</span>
</code></pre></div></div> <h4 id="alternative-solutions-9"><strong>Alternative Solutions</strong></h4> <ul> <li><strong>Use Editors that Handle Encoding Well</strong>: Editors like <strong>TeXstudio</strong> or <strong>Overleaf</strong> manage encoding automatically.</li> <li><strong>Use XeLaTeX or LuaLaTeX</strong>: These engines handle Unicode natively, eliminating encoding issues.</li> </ul> <h4 id="out-of-the-box-tip-9"><strong>Out-of-the-Box Tip</strong></h4> <p>Ensure all team members use the same encoding settings to prevent conflicts when collaborating.</p> <hr/> <h2 id="advanced-mistakes">Advanced Mistakes</h2> <h3 id="1-misuse-of-math-operators-sin-log-etc">1. Misuse of Math Operators (<code class="language-plaintext highlighter-rouge">\sin</code>, <code class="language-plaintext highlighter-rouge">\log</code>, etc.)</h3> <h4 id="the-issue-10"><strong>The Issue</strong></h4> <p>Not using the proper commands for mathematical operators leads to incorrect formatting, such as operators appearing italicized like variables.</p> <h4 id="symptoms-10"><strong>Symptoms</strong></h4> <ul> <li><strong>Improper Formatting</strong>: Function names like “sin” or “log” are italicized.</li> <li><strong>Incorrect Spacing</strong>: Around operators in mathematical expressions.</li> </ul> <h4 id="example-of-the-mistake-10"><strong>Example of the Mistake</strong></h4> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Let <span class="p">$</span><span class="nb">y </span><span class="o">=</span><span class="nb"> sin</span><span class="o">(</span><span class="nb">x</span><span class="o">)</span><span class="nb"> </span><span class="o">+</span><span class="nb"> log</span><span class="o">(</span><span class="nb">x</span><span class="o">)</span><span class="p">$</span>.
</code></pre></div></div> <h4 id="explanation-10"><strong>Explanation</strong></h4> <p>In math mode, LaTeX treats letters as variables and italicizes them. Without proper commands, “sin” and “log” are interpreted as products of variables <code class="language-plaintext highlighter-rouge">s</code>, <code class="language-plaintext highlighter-rouge">i</code>, <code class="language-plaintext highlighter-rouge">n</code>, etc.</p> <h4 id="solution-10"><strong>Solution</strong></h4> <p>Use LaTeX’s built-in commands for standard mathematical operators.</p> <h4 id="corrected-code-10"><strong>Corrected Code</strong></h4> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Let <span class="p">$</span><span class="nb">y </span><span class="o">=</span><span class="nb"> </span><span class="nv">\sin</span><span class="o">(</span><span class="nb">x</span><span class="o">)</span><span class="nb"> </span><span class="o">+</span><span class="nb"> </span><span class="nv">\log</span><span class="o">(</span><span class="nb">x</span><span class="o">)</span><span class="p">$</span>.
</code></pre></div></div> <h4 id="alternative-solutions-10"><strong>Alternative Solutions</strong></h4> <ul> <li> <p><strong>Use <code class="language-plaintext highlighter-rouge">\operatorname{}</code> for Custom Operators</strong>:</p> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Let <span class="p">$</span><span class="nb">y </span><span class="o">=</span><span class="nb"> </span><span class="nv">\operatorname</span><span class="p">{</span><span class="nb">customFunc</span><span class="p">}</span><span class="o">(</span><span class="nb">x</span><span class="o">)</span><span class="p">$</span>.
</code></pre></div> </div> </li> <li> <p><strong>Define New Operators with <code class="language-plaintext highlighter-rouge">\DeclareMathOperator</code></strong>:</p> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">\usepackage</span><span class="p">{</span>amsmath<span class="p">}</span>

<span class="k">\DeclareMathOperator</span><span class="p">{</span><span class="k">\sech</span><span class="p">}{</span>sech<span class="p">}</span>

Let <span class="p">$</span><span class="nb">y </span><span class="o">=</span><span class="nb"> </span><span class="nv">\sech</span><span class="o">(</span><span class="nb">x</span><span class="o">)</span><span class="p">$</span>.
</code></pre></div> </div> </li> </ul> <h4 id="out-of-the-box-tip-10"><strong>Out-of-the-Box Tip</strong></h4> <p>If you need an operator with limits like <code class="language-plaintext highlighter-rouge">\sum</code> or <code class="language-plaintext highlighter-rouge">\lim</code>, use <code class="language-plaintext highlighter-rouge">\DeclareMathOperator*</code>:</p> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">\DeclareMathOperator*</span><span class="p">{</span><span class="k">\Max</span><span class="p">}{</span>Max<span class="p">}</span>

Let <span class="p">$</span><span class="nv">\Max</span><span class="p">_{</span><span class="nb">x </span><span class="nv">\in</span><span class="nb"> S</span><span class="p">}</span><span class="nb"> f</span><span class="o">(</span><span class="nb">x</span><span class="o">)</span><span class="p">$</span>.
</code></pre></div></div> <p>This ensures proper formatting and placement of limits.</p> <hr/> <h3 id="2-inadequate-spacing-in-math-mode">2. Inadequate Spacing in Math Mode</h3> <h4 id="the-issue-11"><strong>The Issue</strong></h4> <p>LaTeX may not automatically provide appropriate spacing in mathematical expressions, especially around certain symbols or complex equations.</p> <h4 id="symptoms-11"><strong>Symptoms</strong></h4> <ul> <li><strong>Cluttered Expressions</strong>: Mathematical expressions look crowded or need to be readied.</li> <li><strong>Inconsistent Spacing</strong>: Symbols and operators are too close or far apart.</li> </ul> <h4 id="example-of-the-mistake-11"><strong>Example of the Mistake</strong></h4> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code>If <span class="p">$</span><span class="nb">x&gt;y</span><span class="p">$</span>, then <span class="p">$</span><span class="nb">f</span><span class="o">(</span><span class="nb">x</span><span class="o">)=</span><span class="nb">g</span><span class="o">(</span><span class="nb">y</span><span class="o">)</span><span class="p">$</span>.
</code></pre></div></div> <h4 id="explanation-11"><strong>Explanation</strong></h4> <p>LaTeX does not always insert adequate spacing around relational operators (<code class="language-plaintext highlighter-rouge">=</code>, <code class="language-plaintext highlighter-rouge">&lt;</code>, <code class="language-plaintext highlighter-rouge">&gt;</code>) and between function names and variables.</p> <h4 id="solution-11"><strong>Solution</strong></h4> <p>Use spacing commands in math mode to adjust space as needed.</p> <h4 id="corrected-code-11"><strong>Corrected Code</strong></h4> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code>If <span class="p">$</span><span class="nb">x &gt; y</span><span class="p">$</span>, then <span class="p">$</span><span class="nb">f</span><span class="o">(</span><span class="nb">x</span><span class="o">)</span><span class="nb"> </span><span class="o">=</span><span class="nb"> g</span><span class="o">(</span><span class="nb">y</span><span class="o">)</span><span class="p">$</span>.
</code></pre></div></div> <ul> <li> <p>The default spacing is usually acceptable, but if more space is needed:</p> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code>If <span class="p">$</span><span class="nb">x </span><span class="nv">\,</span><span class="nb"> &gt; </span><span class="nv">\,</span><span class="nb"> y</span><span class="p">$</span>, then <span class="p">$</span><span class="nb">f</span><span class="o">(</span><span class="nb">x</span><span class="o">)</span><span class="nb"> </span><span class="nv">\,</span><span class="nb"> </span><span class="o">=</span><span class="nb"> </span><span class="nv">\,</span><span class="nb"> g</span><span class="o">(</span><span class="nb">y</span><span class="o">)</span><span class="p">$</span>.
</code></pre></div> </div> </li> </ul> <h4 id="spacing-commands"><strong>Spacing Commands</strong></h4> <ul> <li><code class="language-plaintext highlighter-rouge">\,</code> : Thin space</li> <li><code class="language-plaintext highlighter-rouge">\:</code> : Medium space</li> <li><code class="language-plaintext highlighter-rouge">\;</code> : Thick space</li> <li><code class="language-plaintext highlighter-rouge">\!</code> : Negative thin space</li> <li><code class="language-plaintext highlighter-rouge">\quad</code> : Space equal to the current font size</li> <li><code class="language-plaintext highlighter-rouge">\qquad</code> : Double <code class="language-plaintext highlighter-rouge">\quad</code></li> </ul> <h4 id="alternative-solutions-11"><strong>Alternative Solutions</strong></h4> <ul> <li> <p><strong>Use <code class="language-plaintext highlighter-rouge">\mathrel{}</code> for Relational Operators</strong>:</p> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code>If <span class="p">$</span><span class="nb">x </span><span class="nv">\mathrel</span><span class="p">{</span><span class="nb">&gt;</span><span class="p">}</span><span class="nb"> y</span><span class="p">$</span>, then <span class="p">$</span><span class="nb">f</span><span class="o">(</span><span class="nb">x</span><span class="o">)</span><span class="nb"> </span><span class="nv">\mathrel</span><span class="p">{</span><span class="o">=</span><span class="p">}</span><span class="nb"> g</span><span class="o">(</span><span class="nb">y</span><span class="o">)</span><span class="p">$</span>.
</code></pre></div> </div> </li> </ul> <h4 id="out-of-the-box-tip-11"><strong>Out-of-the-Box Tip</strong></h4> <p>Define custom commands for frequently used spaced expressions:</p> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">\newcommand</span><span class="p">{</span><span class="k">\sgeq</span><span class="p">}{</span><span class="k">\;</span> <span class="k">\geq</span> <span class="k">\;</span><span class="p">}</span>
</code></pre></div></div> <p>Use as:</p> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code>If <span class="p">$</span><span class="nb">x </span><span class="nv">\sgeq</span><span class="nb"> y</span><span class="p">$</span>, then...
</code></pre></div></div> <p>This ensures consistent spacing throughout your document.</p> <hr/> <h3 id="3-misuse-of-mid-vs--in-math-mode">3. Misuse of <code class="language-plaintext highlighter-rouge">\mid</code> vs. <code class="language-plaintext highlighter-rouge">|</code> in Math Mode</h3> <h4 id="the-issue-12"><strong>The Issue</strong></h4> <p>Using the vertical bar <code class="language-plaintext highlighter-rouge">|</code> instead of <code class="language-plaintext highlighter-rouge">\mid</code> in mathematical expressions can result in incorrect spacing, affecting the readability and meaning of expressions involving conditional probabilities or set notation.</p> <h4 id="symptoms-12"><strong>Symptoms</strong></h4> <ul> <li><strong>Inconsistent Spacing</strong>: Around the vertical bar.</li> <li><strong>Ambiguity</strong>: Potential confusion in interpreting mathematical statements.</li> </ul> <h4 id="example-of-the-mistake-12"><strong>Example of the Mistake</strong></h4> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code>P(A|B) = <span class="k">\frac</span><span class="p">{</span>P(A <span class="k">\cap</span> B)<span class="p">}{</span>P(B)<span class="p">}</span>
</code></pre></div></div> <h4 id="explanation-12"><strong>Explanation</strong></h4> <p>In math mode, <code class="language-plaintext highlighter-rouge">|</code> is treated as a math operator with binary relation spacing, which may not be appropriate for all contexts. The <code class="language-plaintext highlighter-rouge">\mid</code> command provides the correct spacing for “middle” separators.</p> <h4 id="solution-12"><strong>Solution</strong></h4> <p>Use <code class="language-plaintext highlighter-rouge">\mid</code> for conditional expressions and set notation.</p> <h4 id="corrected-code-12"><strong>Corrected Code</strong></h4> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code>P(A <span class="k">\mid</span> B) = <span class="k">\frac</span><span class="p">{</span>P(A <span class="k">\cap</span> B)<span class="p">}{</span>P(B)<span class="p">}</span>
</code></pre></div></div> <h4 id="alternative-solutions-12"><strong>Alternative Solutions</strong></h4> <ul> <li> <p><strong>Use <code class="language-plaintext highlighter-rouge">\bigm|</code> for Adjustable Size</strong>:</p> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code>P<span class="k">\bigl</span>(A <span class="k">\bigm</span>| B<span class="k">\bigr</span>)
</code></pre></div> </div> </li> <li> <p><strong>Define Custom Commands</strong>:</p> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">\newcommand</span><span class="p">{</span><span class="k">\given</span><span class="p">}{</span><span class="k">\mid</span><span class="p">}</span>

P(A <span class="k">\given</span> B)
</code></pre></div> </div> </li> </ul> <h4 id="out-of-the-box-tip-12"><strong>Out-of-the-Box Tip</strong></h4> <p>For complex expressions, use <code class="language-plaintext highlighter-rouge">\left</code> and <code class="language-plaintext highlighter-rouge">\right</code> with <code class="language-plaintext highlighter-rouge">\middle|</code>:</p> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code>P<span class="k">\left</span>( A <span class="k">\,\middle</span>|<span class="k">\,</span> B <span class="k">\right</span>)
</code></pre></div></div> <p>This ensures that the size of the delimiters adjusts appropriately to the content.</p> <hr/> <h3 id="4-not-using-non-breaking-spaces-for-units-and-numbers">4. Not Using Non-Breaking Spaces for Units and Numbers</h3> <h4 id="the-issue-13"><strong>The Issue</strong></h4> <p>Numbers and their associated units or symbols can be separated across lines if LaTeX inserts a line break between them, leading to awkward and confusing formatting.</p> <h4 id="symptoms-13"><strong>Symptoms</strong></h4> <ul> <li><strong>Separated Units</strong>: Units or symbols appearing at the beginning of a new line, separated from the associated number.</li> <li><strong>Disrupted References</strong>: Expressions like “Figure 1” split between lines.</li> </ul> <h4 id="example-of-the-mistake-13"><strong>Example of the Mistake</strong></h4> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code>The distance is 10 km.

See Figure 1 for details.
</code></pre></div></div> <p>If a line break occurs after “10” or “Figure,” the unit or figure number is separated.</p> <h4 id="explanation-13"><strong>Explanation</strong></h4> <p>By default, LaTeX treats spaces as possible breakpoints. To keep numbers and units together, non-breaking spaces are needed.</p> <h4 id="solution-13"><strong>Solution</strong></h4> <p>Use a tilde <code class="language-plaintext highlighter-rouge">~</code> to create a non-breaking space between the number and the unit or reference.</p> <h4 id="corrected-code-13"><strong>Corrected Code</strong></h4> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code>The distance is 10~km.

See Figure~1 for details.
</code></pre></div></div> <h4 id="alternative-solutions-13"><strong>Alternative Solutions</strong></h4> <ul> <li> <p><strong>Use <code class="language-plaintext highlighter-rouge">\nobreakspace</code></strong>:</p> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code>The distance is 10<span class="k">\nobreakspace</span> km.
</code></pre></div> </div> </li> <li> <p><strong>Employ the <code class="language-plaintext highlighter-rouge">siunitx</code> Package for Units</strong>:</p> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">\usepackage</span><span class="p">{</span>siunitx<span class="p">}</span>

The distance is <span class="k">\SI</span><span class="p">{</span>10<span class="p">}{</span><span class="k">\kilo\metre</span><span class="p">}</span>.
</code></pre></div> </div> </li> </ul> <h4 id="out-of-the-box-tip-13"><strong>Out-of-the-Box Tip</strong></h4> <p>For dates and other connected phrases, use non-breaking spaces:</p> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code>On April~15, we observed...

Refer to Equation~(2).
</code></pre></div></div> <p>This ensures that connected information stays together, enhancing readability.</p> <hr/> <h3 id="5-incorrect-use-of-declarepaireddelimiter">5. Incorrect Use of <code class="language-plaintext highlighter-rouge">\DeclarePairedDelimiter</code></h3> <h4 id="the-issue-14"><strong>The Issue</strong></h4> <p>Manually sizing delimiters using <code class="language-plaintext highlighter-rouge">\left</code> and <code class="language-plaintext highlighter-rouge">\right</code> can lead to inconsistent formatting and excessive whitespace.</p> <h4 id="symptoms-14"><strong>Symptoms</strong></h4> <ul> <li><strong>Oversized Delimiters</strong>: Parentheses or brackets larger than necessary.</li> <li><strong>Inconsistent Sizing</strong>: Across similar expressions, leading to a lack of uniformity.</li> </ul> <h4 id="example-of-the-mistake-14"><strong>Example of the Mistake</strong></h4> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">\left</span>( <span class="k">\frac</span><span class="p">{</span>a<span class="p">}{</span>b<span class="p">}</span> <span class="k">\right</span>) + <span class="k">\left</span>( <span class="k">\frac</span><span class="p">{</span>c<span class="p">}{</span>d<span class="p">}</span> <span class="k">\right</span>)
</code></pre></div></div> <h4 id="explanation-14"><strong>Explanation</strong></h4> <p>Using <code class="language-plaintext highlighter-rouge">\left</code> and <code class="language-plaintext highlighter-rouge">\right</code> forces LaTeX to size delimiters based on the content, which may not always be visually optimal.</p> <h4 id="solution-14"><strong>Solution</strong></h4> <p>Use the <code class="language-plaintext highlighter-rouge">\DeclarePairedDelimiter</code> command from the <code class="language-plaintext highlighter-rouge">mathtools</code> package to define paired delimiters with flexible sizing.</p> <h4 id="corrected-code-14"><strong>Corrected Code</strong></h4> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">\usepackage</span><span class="p">{</span>mathtools<span class="p">}</span>

<span class="k">\DeclarePairedDelimiter</span><span class="p">{</span><span class="k">\paren</span><span class="p">}{</span>(<span class="p">}{</span>)<span class="p">}</span>

<span class="p">\[</span><span class="nb">
</span><span class="nv">\paren</span><span class="o">*</span><span class="p">{</span><span class="nv">\frac</span><span class="p">{</span><span class="nb">a</span><span class="p">}{</span><span class="nb">b</span><span class="p">}}</span><span class="nb"> </span><span class="o">+</span><span class="nb"> </span><span class="nv">\paren</span><span class="o">*</span><span class="p">{</span><span class="nv">\frac</span><span class="p">{</span><span class="nb">c</span><span class="p">}{</span><span class="nb">d</span><span class="p">}}</span><span class="nb">
</span><span class="p">\]</span>
</code></pre></div></div> <ul> <li>The <code class="language-plaintext highlighter-rouge">*</code> in <code class="language-plaintext highlighter-rouge">\paren*{}</code> automatically adjusts the size of the delimiters.</li> </ul> <h4 id="alternative-solutions-14"><strong>Alternative Solutions</strong></h4> <ul> <li> <p><strong>Specify Delimiter Size Manually</strong>:</p> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">\[</span><span class="nb">
</span><span class="nv">\paren</span><span class="o">[</span><span class="nv">\bigg</span><span class="o">]</span><span class="p">{</span><span class="nv">\frac</span><span class="p">{</span><span class="nb">a</span><span class="p">}{</span><span class="nb">b</span><span class="p">}}</span><span class="nb"> </span><span class="o">+</span><span class="nb"> </span><span class="nv">\paren</span><span class="o">[</span><span class="nv">\Big</span><span class="o">]</span><span class="p">{</span><span class="nv">\frac</span><span class="p">{</span><span class="nb">c</span><span class="p">}{</span><span class="nb">d</span><span class="p">}}</span><span class="nb">
</span><span class="p">\]</span>
</code></pre></div> </div> </li> <li> <p><strong>Use <code class="language-plaintext highlighter-rouge">\mleft</code> and <code class="language-plaintext highlighter-rouge">\mright</code> for Better Spacing</strong>:</p> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">\[</span><span class="nb">
</span><span class="nv">\mleft</span><span class="o">(</span><span class="nb"> </span><span class="nv">\frac</span><span class="p">{</span><span class="nb">a</span><span class="p">}{</span><span class="nb">b</span><span class="p">}</span><span class="nb"> </span><span class="nv">\mright</span><span class="o">)</span><span class="nb"> </span><span class="o">+</span><span class="nb"> </span><span class="nv">\mleft</span><span class="o">(</span><span class="nb"> </span><span class="nv">\frac</span><span class="p">{</span><span class="nb">c</span><span class="p">}{</span><span class="nb">d</span><span class="p">}</span><span class="nb"> </span><span class="nv">\mright</span><span class="o">)</span><span class="nb">
</span><span class="p">\]</span>
</code></pre></div> </div> </li> </ul> <h4 id="out-of-the-box-tip-14"><strong>Out-of-the-Box Tip</strong></h4> <p>Define additional paired delimiters for brackets, braces, or absolute values:</p> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">\DeclarePairedDelimiter</span><span class="p">{</span><span class="k">\bracket</span><span class="p">}{</span>[<span class="p">}{</span>]<span class="p">}</span>
<span class="k">\DeclarePairedDelimiter</span><span class="p">{</span><span class="k">\abs</span><span class="p">}{</span><span class="k">\lvert</span><span class="p">}{</span><span class="k">\rvert</span><span class="p">}</span>

<span class="p">\[</span><span class="nb">
</span><span class="nv">\abs</span><span class="o">*</span><span class="p">{</span><span class="nv">\frac</span><span class="p">{</span><span class="nb">a</span><span class="p">}{</span><span class="nb">b</span><span class="p">}}</span><span class="nb">
</span><span class="p">\]</span>
</code></pre></div></div> <p>This approach ensures consistent delimiter sizing throughout your document.</p> <hr/> <h3 id="6-overloading-commands-unintentionally">6. Overloading Commands Unintentionally</h3> <h4 id="the-issue-15"><strong>The Issue</strong></h4> <p>Redefining existing LaTeX commands can cause unexpected behavior and conflicts, leading to errors or loss of functionality.</p> <h4 id="symptoms-15"><strong>Symptoms</strong></h4> <ul> <li><strong>Unexpected Behavior</strong>: Original commands no longer work as expected.</li> <li><strong>Compilation Warnings</strong>: About command redefinitions.</li> <li><strong>Formatting Issues</strong>: Unintended changes in document appearance.</li> </ul> <h4 id="example-of-the-mistake-15"><strong>Example of the Mistake</strong></h4> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">\newcommand</span><span class="p">{</span><span class="k">\table</span><span class="p">}{</span>This is my table.<span class="p">}</span>
</code></pre></div></div> <h4 id="explanation-15"><strong>Explanation</strong></h4> <p>By redefining <code class="language-plaintext highlighter-rouge">\table</code>, you overwrite the existing command, which can interfere with LaTeX’s internal operations or other packages.</p> <h4 id="solution-15"><strong>Solution</strong></h4> <p>Use unique names for custom commands, preferably with a prefix.</p> <h4 id="corrected-code-15"><strong>Corrected Code</strong></h4> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">\newcommand</span><span class="p">{</span><span class="k">\mytable</span><span class="p">}{</span>This is my table.<span class="p">}</span>
</code></pre></div></div> <h4 id="alternative-solutions-15"><strong>Alternative Solutions</strong></h4> <ul> <li> <p><strong>Check Command Existence Before Defining</strong>:</p> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">\providecommand</span><span class="p">{</span><span class="k">\mycommand</span><span class="p">}{</span>...<span class="p">}</span>
</code></pre></div> </div> </li> <li> <p><strong>Use Package-Specific Namespaces</strong>: Some packages allow defining commands within their own namespace.</p> </li> </ul> <h4 id="out-of-the-box-tip-15"><strong>Out-of-the-Box Tip</strong></h4> <p>Develop a naming convention for your custom commands, such as prefixing them with your initials or project abbreviation, e.g., <code class="language-plaintext highlighter-rouge">\ABsection</code>.</p> <hr/> <h3 id="7-not-understanding-error-messages">7. Not Understanding Error Messages</h3> <h4 id="the-issue-16"><strong>The Issue</strong></h4> <p>LaTeX error messages can be cryptic, making identifying and fixing issues challenging.</p> <h4 id="symptoms-16"><strong>Symptoms</strong></h4> <ul> <li><strong>Frustration</strong>: Due to unclear error messages.</li> <li><strong>Time Wasted</strong>: Spending excessive time troubleshooting simple errors.</li> </ul> <h4 id="example-of-the-mistake-16"><strong>Example of the Mistake</strong></h4> <p>An error message like:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>! Missing $ inserted.
</code></pre></div></div> <h4 id="explanation-16"><strong>Explanation</strong></h4> <p>This error often occurs when a math-mode-only symbol is used outside of math mode or when a <code class="language-plaintext highlighter-rouge">$</code> is missing.</p> <h4 id="solution-16"><strong>Solution</strong></h4> <ul> <li><strong>Read the Error Message Carefully</strong>: It often indicates the line number and nature of the error.</li> <li><strong>Check for Missing Math Mode Delimiters</strong>: Ensure that mathematical expressions are enclosed within <code class="language-plaintext highlighter-rouge">$...$</code> or <code class="language-plaintext highlighter-rouge">\[...\]</code>.</li> </ul> <h4 id="alternative-solutions-16"><strong>Alternative Solutions</strong></h4> <ul> <li><strong>Use an Editor with Error Highlighting</strong>: Editors like <strong>TeXstudio</strong> or <strong>Visual Studio Code</strong> with LaTeX extensions can pinpoint errors.</li> <li><strong>Compile Frequently</strong>: Catch errors early by compiling your document regularly during editing.</li> </ul> <h4 id="out-of-the-box-tip-16"><strong>Out-of-the-Box Tip</strong></h4> <p>Consult online resources like <strong>TeX Stack Exchange</strong>, where similar errors are discussed. Copy the error message into the search bar to find potential solutions.</p> <hr/> <h3 id="8-inefficient-handling-of-large-documents">8. Inefficient Handling of Large Documents</h3> <h4 id="the-issue-17"><strong>The Issue</strong></h4> <p>Not properly structuring large documents leads to slow compilation times and difficulty in navigation.</p> <h4 id="symptoms-17"><strong>Symptoms</strong></h4> <ul> <li><strong>Slow Compilation</strong>: Especially with documents containing many images or chapters.</li> <li><strong>Difficulty Managing Content</strong>: Hard to navigate and edit specific sections.</li> </ul> <h4 id="example-of-the-mistake-17"><strong>Example of the Mistake</strong></h4> <p>Writing an entire thesis in a single <code class="language-plaintext highlighter-rouge">.tex</code> file.</p> <h4 id="explanation-17"><strong>Explanation</strong></h4> <p>Large documents become unwieldy when not broken into manageable parts.</p> <h4 id="solution-17"><strong>Solution</strong></h4> <ul> <li><strong>Use <code class="language-plaintext highlighter-rouge">\include</code> and <code class="language-plaintext highlighter-rouge">\input</code> Commands</strong>: Split the document into multiple files.</li> </ul> <h4 id="corrected-code-16"><strong>Corrected Code</strong></h4> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">% Main document (main.tex)</span>
<span class="k">\documentclass</span><span class="p">{</span>book<span class="p">}</span>
<span class="nt">\begin{document}</span>
<span class="k">\tableofcontents</span>
<span class="k">\include</span><span class="p">{</span>chapters/introduction<span class="p">}</span>
<span class="k">\include</span><span class="p">{</span>chapters/methodology<span class="p">}</span>
<span class="k">\include</span><span class="p">{</span>chapters/results<span class="p">}</span>
<span class="nt">\end{document}</span>
</code></pre></div></div> <h4 id="alternative-solutions-17"><strong>Alternative Solutions</strong></h4> <ul> <li> <p><strong>Use the <code class="language-plaintext highlighter-rouge">subfiles</code> Package</strong>: Allows individual compilation of chapters.</p> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">\usepackage</span><span class="p">{</span>subfiles<span class="p">}</span>
</code></pre></div> </div> </li> </ul> <h4 id="out-of-the-box-tip-17"><strong>Out-of-the-Box Tip</strong></h4> <p>Use <code class="language-plaintext highlighter-rouge">\includeonly{}</code> to compile only specific chapters, speeding up the compilation process during editing.</p> <hr/> <h3 id="9-neglecting-the-use-of-bibliography-tools">9. Neglecting the Use of Bibliography Tools</h3> <h4 id="the-issue-18"><strong>The Issue</strong></h4> <p>Manually formatting citations and bibliographies is time-consuming and prone to errors.</p> <h4 id="symptoms-18"><strong>Symptoms</strong></h4> <ul> <li><strong>Inconsistent Citation Styles</strong>: Across the document.</li> <li><strong>Formatting Errors</strong>: In bibliography entries.</li> </ul> <h4 id="example-of-the-mistake-18"><strong>Example of the Mistake</strong></h4> <p>Manually typing bibliography entries at the end of the document.</p> <h4 id="explanation-18"><strong>Explanation</strong></h4> <p>Manual management is inefficient and does not scale well with many references.</p> <h4 id="solution-18"><strong>Solution</strong></h4> <p>Use bibliography management packages like <code class="language-plaintext highlighter-rouge">biblatex</code> with <code class="language-plaintext highlighter-rouge">biber</code>.</p> <h4 id="corrected-code-17"><strong>Corrected Code</strong></h4> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">\usepackage</span>[
  backend=biber,
  style=authoryear,
]<span class="p">{</span>biblatex<span class="p">}</span>
<span class="k">\addbibresource</span><span class="p">{</span>references.bib<span class="p">}</span>

As discussed in <span class="k">\cite</span><span class="p">{</span>Doe2020<span class="p">}</span>, the results are significant.

...

<span class="k">\printbibliography</span>
</code></pre></div></div> <h4 id="alternative-solutions-18"><strong>Alternative Solutions</strong></h4> <ul> <li><strong>Use Reference Management Software</strong>: Like <strong>Zotero</strong> or <strong>JabRef</strong> to manage <code class="language-plaintext highlighter-rouge">.bib</code> files.</li> </ul> <h4 id="out-of-the-box-tip-18"><strong>Out-of-the-Box Tip</strong></h4> <p>Customize citation styles extensively with <code class="language-plaintext highlighter-rouge">biblatex</code> options, ensuring compliance with journal requirements.</p> <hr/> <h3 id="10-improper-use-of-newcommand-and-renewcommand">10. Improper Use of <code class="language-plaintext highlighter-rouge">\newcommand</code> and <code class="language-plaintext highlighter-rouge">\renewcommand</code></h3> <h4 id="the-issue-19"><strong>The Issue</strong></h4> <p>Using <code class="language-plaintext highlighter-rouge">\newcommand</code> to redefine existing commands or <code class="language-plaintext highlighter-rouge">\renewcommand</code> to define new commands leads to errors.</p> <h4 id="symptoms-19"><strong>Symptoms</strong></h4> <ul> <li><strong>Compilation Errors</strong>: Such as <code class="language-plaintext highlighter-rouge">Command \foo already defined</code>.</li> <li><strong>Unexpected Behavior</strong>: Commands not working as intended.</li> </ul> <h4 id="example-of-the-mistake-19"><strong>Example of the Mistake</strong></h4> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">\newcommand</span><span class="p">{</span><span class="k">\section</span><span class="p">}</span>[1]<span class="p">{</span><span class="k">\textbf</span><span class="p">{</span>#1<span class="p">}}</span>
</code></pre></div></div> <h4 id="explanation-19"><strong>Explanation</strong></h4> <p>Using <code class="language-plaintext highlighter-rouge">\newcommand</code> on an existing command (<code class="language-plaintext highlighter-rouge">\section</code>) results in an error because it is already defined.</p> <h4 id="solution-19"><strong>Solution</strong></h4> <p>Use <code class="language-plaintext highlighter-rouge">\renewcommand</code> to redefine existing commands.</p> <h4 id="corrected-code-18"><strong>Corrected Code</strong></h4> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">\renewcommand</span><span class="p">{</span><span class="k">\section</span><span class="p">}</span>[1]<span class="p">{</span><span class="k">\textbf</span><span class="p">{</span>#1<span class="p">}}</span>
</code></pre></div></div> <h4 id="alternative-solutions-19"><strong>Alternative Solutions</strong></h4> <ul> <li><strong>Avoid Redefining Core Commands</strong>: Unless absolutely necessary.</li> </ul> <h4 id="out-of-the-box-tip-19"><strong>Out-of-the-Box Tip</strong></h4> <p>When redefining commands, consider the impact on document structure and package compatibility.</p> <hr/>]]></content><author><name>Ionel Eduard Stan</name></author><category term=""/><category term="Tutorial"/><summary type="html"><![CDATA[An In-Depth Guide to Common Mistakes and Advanced Techniques]]></summary></entry><entry><title type="html">Understanding the Future of Explainable Artificial Intelligence (XAI)</title><link href="https://eduardstan.github.io/https://eduardstan.github.io/blog/2024/xai2-manifesto/" rel="alternate" type="text/html" title="Understanding the Future of Explainable Artificial Intelligence (XAI)"/><published>2024-08-02T00:00:00+00:00</published><updated>2024-08-02T00:00:00+00:00</updated><id>https://eduardstan.github.io/https://eduardstan.github.io/blog/2024/xai2-manifesto</id><content type="html" xml:base="https://eduardstan.github.io/https://eduardstan.github.io/blog/2024/xai2-manifesto/"><![CDATA[<h2 id="the-human-face-of-ai">The Human Face of AI</h2> <blockquote> <p>Imagine being told that a computer algorithm determined whether you qualify for a loan or made a critical decision in your healthcare.</p> <p><strong>It’s unsettling, right?</strong></p> </blockquote> <p>We, as humans, naturally want to understand why such decisions were made. This desire for transparency is what drives the field of Explainable Artificial Intelligence (XAI). But as AI systems grow more complex, the challenge of making them understandable grows, too. Enter XAI 2.0, a new wave of research aimed at making AI not just more intelligent but also more comprehensible to humans.</p> <hr/> <h2 id="the-evolution-and-urgency-of-xai">The Evolution and Urgency of XAI</h2> <p>Explainable Artificial Intelligence has become a vital area of research as AI systems increasingly influence critical areas like finance, healthcare, and environmental management. The paper <a href="https://www.sciencedirect.com/science/article/pii/S1566253524000794">Explainable Artificial Intelligence (XAI) 2.0: A Manifesto of Open Challenges and Interdisciplinary Research Directions</a> by Longo et al. brings together various experts from various fields to address the urgent need for transparency in AI systems. As AI continues to permeate our lives, understanding its decisions is no longer optional—it’s essential. The authors highlight 28 open problems in XAI, categorized into nine distinct high-level areas, aiming to synchronize research efforts and propel the field forward.</p> <details><summary>Click here for details on the areas, describing their open problems and possible solutions.</summary> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/https://eduardstan.github.io/assets/img/xai2-manifesto-480.webp 480w,/https://eduardstan.github.io/assets/img/xai2-manifesto-800.webp 800w,/https://eduardstan.github.io/assets/img/xai2-manifesto-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/https://eduardstan.github.io/assets/img/xai2-manifesto.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> XAI 2.0 manifesto: High-level challenges. </div> <p>The following tables outline the open problems associated with each high-level problem, providing descriptions and possible solutions to address them.</p> <h3 id="1-creating-explanations-for-new-types-of-ai">1. <strong>Creating explanations for new types of AI</strong></h3> <table> <thead> <tr> <th><strong>Open Problem</strong></th> <th><strong>Description</strong></th> <th><strong>Possible Solutions</strong></th> </tr> </thead> <tbody> <tr> <td><strong>1.1. Creating explanations for generative and large language models</strong></td> <td>Generative models and large language models (LLMs) like GPT are complex, high-dimensional, and capable of producing diverse outputs, making it difficult to explain how they arrive at specific outputs.</td> <td>Develop new XAI techniques tailored for generative models and LLMs. Techniques include mechanistic interpretability, causal analysis, and visualization of latent spaces to understand learned representations.</td> </tr> <tr> <td><strong>1.2. Creating explanations for distributed and collaborative learning</strong></td> <td>Distributed and collaborative learning systems, such as federated learning, involve multiple models trained on decentralized data, complicating generating coherent, unified explanations.</td> <td>Create XAI frameworks that generate local explanations at individual nodes and aggregate them for global insights. Use privacy-preserving techniques like Multi-Party Computation (MPC) and differential privacy to protect sensitive data while explaining.</td> </tr> </tbody> </table> <h3 id="2-improving-current-xai-methods">2. <strong>Improving current XAI methods</strong></h3> <table> <thead> <tr> <th><strong>Open Problem</strong></th> <th><strong>Description</strong></th> <th><strong>Possible Solutions</strong></th> </tr> </thead> <tbody> <tr> <td><strong>2.1. Augmenting and improving attribution methods</strong></td> <td>Attribution methods like saliency maps are widely used in XAI but suffer from issues such as sensitivity to input perturbations and difficulty in interpretation by non-experts.</td> <td>Combine attribution methods with other XAI techniques for a more robust explanation. Enhance the methods to reduce sensitivity to input variations and make them more interpretable by including explanations in natural language.</td> </tr> <tr> <td><strong>2.2. Augmenting and improving concept-based learning algorithms</strong></td> <td>Concept-based learning algorithms explain model predictions in terms of human-understandable concepts, but these methods often need help with generalization and applicability across domains.</td> <td>Integrate knowledge graphs and symbolic AI approaches with concept-based methods to enhance generalization. Develop techniques to automatically identify and learn new concepts from data, improving the flexibility and applicability of these models.</td> </tr> <tr> <td><strong>2.3. Removing artefacts in synthesis-based explanations</strong></td> <td>Synthesis-based explanations generate example inputs to illustrate model behavior, but these examples can contain artifacts that obscure the truly learned concepts.</td> <td>Reduce artifacts using state-of-the-art generative models like diffusion models. Implement comparison mechanisms to evaluate the accuracy of synthesized explanations against known reference inputs.</td> </tr> <tr> <td><strong>2.4. Creating robust explanations</strong></td> <td>Explanations can be fragile, changing significantly with minor input modifications, undermining their reliability and trustworthiness.</td> <td>Develop methods to evaluate the robustness of explanations under different conditions. Combine multiple explanation techniques to mitigate weaknesses in individual methods. Explore ante-hoc explainable models that inherently produce robust explanations.</td> </tr> </tbody> </table> <h3 id="3-clarifying-the-use-of-concepts-in-xai">3. <strong>Clarifying the use of concepts in XAI</strong></h3> <table> <thead> <tr> <th><strong>Open Problem</strong></th> <th><strong>Description</strong></th> <th><strong>Possible Solutions</strong></th> </tr> </thead> <tbody> <tr> <td><strong>3.1. Elucidating the main concepts</strong></td> <td>There needs to be more consensus on pivotal terms like explainability, interpretability, and transparency in XAI, which can lead to confusion and inconsistency in research and application.</td> <td>Standardize terminology by creating a shared glossary or taxonomy of XAI terms. Engage in interdisciplinary discussions to align definitions and ensure they are applied consistently across different domains.</td> </tr> <tr> <td><strong>3.2. Clarifying the relationship between XAI and trustworthiness</strong></td> <td>The relationship between explainability and trustworthiness needs to be better understood, which hinders the development of truly trustworthy AI systems.</td> <td>Conduct interdisciplinary research to explore how XAI contributes to trustworthiness in AI. Develop frameworks integrating XAI with other trustworthiness criteria, such as fairness and robustness.</td> </tr> <tr> <td><strong>3.3. Finding a useful account of understanding</strong></td> <td>Understanding in XAI is often assumed rather than explicitly defined, making it difficult to measure and evaluate whether explanations genuinely enhance user comprehension.</td> <td>Drawing from psychology and philosophy, develop a clear conceptual framework for understanding XAI. Design empirical studies to test and refine this framework in practical applications.</td> </tr> </tbody> </table> <h3 id="4-evaluating-xai-methods-and-explanations">4. <strong>Evaluating XAI methods and explanations</strong></h3> <table> <thead> <tr> <th><strong>Open Problem</strong></th> <th><strong>Description</strong></th> <th><strong>Possible Solutions</strong></th> </tr> </thead> <tbody> <tr> <td><strong>4.1. Facilitating human evaluation of explanations</strong></td> <td>Many XAI methods need more rigorous human evaluation, making it unclear whether they are genuinely helpful or comprehensible to end-users.</td> <td>Develop standardized protocols for user studies that evaluate the effectiveness and comprehensibility of XAI methods. Incorporate insights from HCI, psychology, and social sciences into the design of these studies.</td> </tr> <tr> <td><strong>4.2. Creating an evaluation framework for XAI methods</strong></td> <td>There is no universally accepted framework for evaluating XAI methods, leading to inconsistent quality and effectiveness assessments.</td> <td>Develop a comprehensive evaluation framework that includes fidelity, usability, and trustworthiness metrics. Encourage the adoption of standardized evaluation tools like Quantus across different XAI applications.</td> </tr> <tr> <td><strong>4.3. Overcoming limitations of studies with humans</strong></td> <td>Human studies in XAI are often limited by sample size, diversity, and reproducibility, which can lead to biased or unreliable conclusions.</td> <td>Synthetic data and virtual participants can supplement human studies and increase diversity. Standardize methodologies and statistical analyses to improve the reliability and generalizability of study findings.</td> </tr> </tbody> </table> <h3 id="5-supporting-the-human-centeredness-of-explanations">5. <strong>Supporting the human-centeredness of explanations</strong></h3> <table> <thead> <tr> <th><strong>Open Problem</strong></th> <th><strong>Description</strong></th> <th><strong>Possible Solutions</strong></th> </tr> </thead> <tbody> <tr> <td><strong>5.1. Creating human-understandable explanations</strong></td> <td>Many XAI methods produce technically accurate explanations that are difficult for non-expert users to understand and use.</td> <td>Design explanations more aligned with human cognitive processes, using natural language and visual aids. Incorporate user feedback to refine and improve the accessibility of explanations.</td> </tr> <tr> <td><strong>5.2. Facilitating explainability with concept-based explanations</strong></td> <td>Concept-based explanations must bridge the gap between technical accuracy and human intuition, ensuring that explanations are meaningful and valuable.</td> <td>Integrate symbolic reasoning with concept-based explanations to enhance their interpretability. Develop tools that allow users to interactively explore and understand the concepts underlying model predictions.</td> </tr> <tr> <td><strong>5.3. Addressing explanations divorced from reality</strong></td> <td>Explanations that are technically correct but do not reflect real-world causality or logic can be misleading and reduce trust in AI systems.</td> <td>Ensure that explanations are grounded in real-world logic and causality by validating them against known outcomes and expert knowledge. Use causal inference techniques to improve the alignment between explanations and real-world processes.</td> </tr> <tr> <td><strong>5.4. Uncovering causality for actionable explanations</strong></td> <td>Understanding causality in AI models is critical for making explanations actionable, but current methods often fall short in this area.</td> <td>Develop methods that explicitly model and reveal causal relationships within AI systems. Combine XAI with causal inference tools to create explanations that not only describe correlations but also indicate potential interventions.</td> </tr> </tbody> </table> <h3 id="6-supporting-the-multi-dimensionality-of-explainability">6. <strong>Supporting the multi-dimensionality of explainability</strong></h3> <table> <thead> <tr> <th><strong>Open Problem</strong></th> <th><strong>Description</strong></th> <th><strong>Possible Solutions</strong></th> </tr> </thead> <tbody> <tr> <td><strong>6.1. Creating multi-faceted explanations</strong></td> <td>AI decisions are often complex and multi-dimensional, requiring explanations that capture this complexity and present it in a user-friendly manner.</td> <td>Design XAI systems that provide layered explanations, allowing users to drill down from simple overviews to detailed insights. Implement multi-modal explanations that combine text, visuals, and interactive elements.</td> </tr> <tr> <td><strong>6.2. Enabling interdisciplinary work in XAI</strong></td> <td>XAI research and application require input from diverse fields, but differences in terminology, methodology, and goals often hinder interdisciplinary collaboration.</td> <td>Create interdisciplinary consortia or research groups focused on XAI, facilitating communication and collaboration across fields. Develop shared frameworks and tools that accommodate the needs of different disciplines.</td> </tr> </tbody> </table> <h3 id="7-adjusting-xai-methods-and-explanations">7. <strong>Adjusting XAI methods and explanations</strong></h3> <table> <thead> <tr> <th><strong>Open Problem</strong></th> <th><strong>Description</strong></th> <th><strong>Possible Solutions</strong></th> </tr> </thead> <tbody> <tr> <td><strong>7.1. Adjusting explanations to different stakeholders</strong></td> <td>Different stakeholders (e.g., developers, end-users, regulators) have different needs and expectations from AI explanations, requiring tailored approaches.</td> <td>Develop customizable XAI systems that adjust explanations based on the stakeholder’s role, expertise, and goals. Implement user profiling to adapt explanations dynamically based on real-time user feedback.</td> </tr> <tr> <td><strong>7.2. Adjusting explanations to different domains</strong></td> <td>AI systems are used across diverse domains, each with specific requirements for explanations.</td> <td>Create domain-specific XAI tools that consider each application area’s unique needs and challenges. Collaborate with domain experts to ensure that explanations are relevant and accurate.</td> </tr> <tr> <td><strong>7.3. Adjusting explanations to different goals</strong></td> <td>The purpose of AI explanations can vary from understanding a decision to auditing an AI system, requiring flexibility in XAI approaches.</td> <td>Develop XAI methods that can shift focus based on the intended goal, such as providing detailed audit trails for compliance or simplified explanations for general users. Incorporate goal-based metrics into the evaluation of explanations.</td> </tr> </tbody> </table> <h3 id="8-mitigating-the-negative-impact-of-xai">8. <strong>Mitigating the negative impact of XAI</strong></h3> <table> <thead> <tr> <th><strong>Open Problem</strong></th> <th><strong>Description</strong></th> <th><strong>Possible Solutions</strong></th> </tr> </thead> <tbody> <tr> <td><strong>8.1. Mitigating failed support by XAI</strong></td> <td>XAI methods sometimes fail to provide adequate support, leading to poor decision-making or a false sense of security among users.</td> <td>Develop fallback mechanisms that alert users to potential explanation failures and provide alternative forms of support. Based on user feedback and performance metrics, regularly update and improve XAI methods.</td> </tr> <tr> <td><strong>8.2. Devising criteria for the falsifiability of explanations</strong></td> <td>Explanations should be falsifiable, meaning they can be tested and proven wrong if incorrect, but many current methods still need to meet this standard.</td> <td>Implement mechanisms for testing and validating explanations, ensuring they are plausible and verifiable. Develop standards and guidelines for falsifiability in XAI.</td> </tr> <tr> <td><strong>8.3. Securing explanations from being abused by malicious human agents</strong></td> <td>Malicious actors can exploit XAI systems to manipulate or deceive, posing a risk to security and trust.</td> <td>Implement security measures to protect XAI systems from tampering and abuse. Monitor explanations for signs of manipulation and develop tools to detect and prevent such abuses.</td> </tr> <tr> <td><strong>8.4. Securing explanations from being abused by malicious superintelligent agents</strong></td> <td>As AI systems become more advanced, there is a potential risk that the AI itself could manipulate explanations for harmful purposes.</td> <td>Research and develop safeguards that prevent superintelligent agents from generating misleading or harmful explanations. To mitigate these risks, incorporate AI ethics and safety protocols into XAI design.</td> </tr> </tbody> </table> <h3 id="9-improving-the-societal-impact-of-xai">9. <strong>Improving the societal impact of XAI</strong></h3> <table> <thead> <tr> <th><strong>Open Problem</strong></th> <th><strong>Description</strong></th> <th><strong>Possible Solutions</strong></th> </tr> </thead> <tbody> <tr> <td><strong>9.1. Facilitating originality attribution of AI-generated data and plagiarism detection</strong></td> <td>As AI systems increasingly generate content, it becomes challenging to attribute originality and detect plagiarism.</td> <td>Develop tools and algorithms that can track the provenance of AI-generated content and detect instances of plagiarism. Collaborate with legal and academic institutions to standardize methods for originality attribution.</td> </tr> <tr> <td><strong>9.2. Facilitating the right to be forgotten</strong></td> <td>The right to be forgotten is a legal right in many jurisdictions, but it is not easy to enforce in AI systems that store and process large amounts of data.</td> <td>Implement XAI tools that identify and selectively remove personal data from AI systems, ensuring compliance with privacy laws. Use privacy-preserving techniques like differential privacy and data anonymization to support this process.</td> </tr> <tr> <td><strong>9.3. Addressing the power imbalance between individuals and companies</strong></td> <td>Large companies often control AI systems, creating a power imbalance that can disadvantage individuals.</td> <td>Develop XAI methods that enhance transparency and give individuals more control over how AI systems use their data. Advocate for stronger regulations and policies that protect individuals’ rights in AI interactions.</td> </tr> </tbody> </table> </details> <hr/> <h2 id="making-ai-transparent">Making AI Transparent</h2> <h3 id="simplifying-complex-ideas">Simplifying Complex Ideas</h3> <p>At the core of XAI is the need to explain decisions made by AI systems in ways that humans can understand. This could involve breaking down how a model arrived at a particular decision or providing insights into the model’s inner workings. Think of an AI model as a recipe: the ingredients are the data, the cooking process is the algorithm, and the final dish is the model’s decision. XAI aims to clarify the recipe so we know why the dish tastes like it does.</p> <p>To address this, the paper discusses various explanation methods, such as attribution methods that highlight which parts of the input data are most influential in the model’s decision and concept-based methods that explain decisions in terms of human-understandable concepts. The challenge lies in making these explanations both accurate and accessible.</p> <h3 id="an-experiment">An Experiment</h3> <p>To understand XAI better, try a simple thought experiment:</p> <blockquote> <p>Imagine you’re a teacher grading an essay.</p> <p>Providing constructive feedback is challenging if you see only the final grade without any comments or highlights on what the student did right or wrong.</p> <p>However, if the essay has detailed annotations explaining each grading decision, it becomes easier to provide feedback.</p> </blockquote> <p>This process is similar to what XAI aims to do with AI models; it annotates and explains the decisions so we can understand and trust them.</p> <hr/> <h2 id="deeper-analysis">Deeper Analysis</h2> <h3 id="strengths-and-innovations">Strengths and Innovations</h3> <p>One of the paper’s key strengths is its comprehensive approach to addressing the challenges in XAI. The authors propose innovative methods like mechanistic interpretability, which involves reverse-engineering neural networks to understand their inner workings. This approach is akin to taking apart a clock to see how the gears fit together and make it tick, providing deep insights into the AI’s decision-making process.</p> <p>Additionally, I was particularly intrigued by the discussion of symbolic approaches to XAI, such as concept-based methods. These methods seek to explain AI decisions using human-understandable concepts, which can make AI more relatable and comprehensible. Related to this, the authors also highlight neuro-symbolic approaches, which combine symbolic reasoning with neural networks. This hybrid approach could bridge the gap between traditional, logic-based AI and the more recent data-driven methods, offering explanations that are both logically sound and grounded in data.</p> <p>Moreover, the paper emphasizes the importance of interdisciplinary collaboration in XAI, bringing together experts in computer science, philosophy, psychology, and beyond to tackle these challenges. This multidisciplinary approach is crucial, as the explanations produced by XAI need to be meaningful not just to AI researchers but to a broad audience, including policymakers, end-users, and the general public.</p> <h3 id="critical-perspective">Critical Perspective</h3> <p>However, the paper also highlights significant limitations in the current state of XAI. One major issue is the need for more explanation for new types of AI models, such as generative and large language models. These models are like black boxes with numerous parameters, making dissecting and explaining their decisions challenging.</p> <p>Another limitation is the potential for XAI methods to produce misleading explanations. For example, while practical, popular methods like Shapley values can sometimes create the illusion of understanding without truly capturing the model’s decision process. This raises ethical concerns about the reliability of explanations and the potential for misusing or misunderstanding of these methods.</p> <h3 id="ethical-considerations-and-societal-impact">Ethical Considerations and Societal Impact</h3> <p>The ethical implications of XAI are profound. As AI systems increasingly make decisions that affect our lives, ensuring these decisions are transparent and understandable is critical for building trust. The paper discusses the ethical principle of “explainability” as a core requirement for trustworthy AI, alongside other principles like fairness and harm prevention. The authors call for a balanced approach, where explanations are not just technically sound but also aligned with ethical standards, ensuring that AI systems can be held accountable.</p> <hr/> <h2 id="connecting-the-dots">Connecting the Dots</h2> <p>Reflecting on this research, it’s clear that XAI is not just about making AI more transparent; it’s about bridging the gap between machines and humans.</p> <blockquote> <p>What surprised me most was that we still grapple with fundamental questions about trust and understanding, even with all our technological advancements.</p> </blockquote> <p>This paper connects to broader trends in AI governance and ethics, where the focus is increasingly on making AI systems not just more powerful but more responsible.</p> <p>The authors also mention that the field of XAI is “fermenting,” which I found to be an apt description. XAI research’s rapid evolution and expansion have led to a situation where we are only scratching the surface of what is possible. The paper offers a slice of the vast literature on XAI, but the reality is that there is much more to explore. This fermentation process suggests that XAI is at a critical juncture with significant potential for growth and impact.</p> <p>The discussions in this paper also raise important questions about the future of AI:</p> <blockquote> <p>How do we ensure that as AI becomes more complex, it doesn’t become more opaque?</p> <p>How do we balance the need for powerful AI with transparency?</p> </blockquote> <p>These questions will shape the future of AI and its role in society.</p> <hr/> <h2 id="a-call-to-curiosity">A Call to Curiosity</h2> <p>As you think about the role of AI in your life, consider this:</p> <blockquote> <p><strong>How much do you trust the decisions made by machines?</strong></p> <p><strong>What would make you trust them more?</strong></p> </blockquote> <p>These are the kinds of questions that drive research in XAI. Please explore this field further, whether by reading more about AI ethics, experimenting with AI tools, or simply asking more questions about how the technology you use every day works.</p> <hr/> <h2 id="resources-for-further-exploration">Resources for Further Exploration</h2> <p>For those interested in delving deeper into XAI, here are some resources:</p> <ul> <li><a href="https://www.sciencedirect.com/science/article/pii/S1566253523001148">Explainable Artificial Intelligence (XAI): What we know and what is left to attain Trustworthy Artificial Intelligence</a> by Ali et al. for an overview of current research and trends in XAI.</li> <li><a href="https://link.springer.com/article/10.1007/s10618-022-00867-8">A comprehensive taxonomy for explainable artificial intelligence: a systematic survey of surveys on methods and concepts</a> by Schwalbe and Finzel for a meta-review of surveys on XAI’s methods and concepts.</li> <li><a href="https://www.sciencedirect.com/science/article/pii/S0004370218305988">Explanation in artificial intelligence: Insights from the social sciences</a> by Miller for insights from social sciences on XAI.</li> </ul> <hr/> <h2 id="lets-talk-science">Let’s Talk Science</h2> <p>I invite you to share your thoughts, questions, and experiences with AI in the comments. Let’s build a community where we can explore these topics together, making science accessible, exciting, and relevant to everyone.</p> <h3 id="a-personal-note">A Personal Note</h3> <p>This is my first blog post, and I’m eager to create a platform for shared learning with the community. I invite you to be kind and give constructive feedback, as I’m committed to modifying, integrating, adjusting, and improving this post and future ones based on your curiosity, needs, and insights. Your feedback is invaluable as we collectively explore and communicate the fascinating world of AI.</p> <hr/> <h2 id="conclusion">Conclusion</h2> <p>Explainable AI is not just a technical challenge; it’s a societal one. As we move into the future, ensuring that AI systems are transparent, trustworthy, and aligned with human values will be critical. XAI 2.0 is a step towards that future, but it’s a journey that requires all of us—researchers, practitioners, and the public—to engage with the science and the questions it raises.</p>]]></content><author><name>Ionel Eduard Stan</name></author><category term="Reviews"/><category term="XAI"/><summary type="html"><![CDATA[A Dive into XAI 2.0]]></summary></entry></feed>